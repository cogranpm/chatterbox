#ifndef MEDIA-RECORD_BMP_H
#define MEDIA-RECORD_BMP_H

#include <wx/mstream.h>
#include <wx/image.h>
#include <wx/bitmap.h>

static const unsigned char media-record_bmp[] = 
{
	0x42, 0x4D, 0x36, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x36, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x10, 0x00, 
	0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x18, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0xC4, 0x0E, 
	0x00, 0x00, 0xC4, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFC, 0xFC, 0xFE, 0xD2, 0xD2, 0xF6, 0xBB, 0xBB, 0xF1, 0xEC, 
	0xEC, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xF5, 0xF5, 0xFD, 0x66, 0x66, 0xE1, 0x1E, 0x1E, 
	0xD6, 0x3C, 0x3C, 0xE0, 0x47, 0x47, 0xE4, 0x2B, 0x2B, 0xDB, 
	0x27, 0x27, 0xD6, 0xC0, 0xC0, 0xF2, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE6, 0xE6, 0xFA, 
	0x23, 0x23, 0xD5, 0x5B, 0x5B, 0xED, 0x71, 0x71, 0xF5, 0x5A, 
	0x5A, 0xF2, 0x53, 0x53, 0xF2, 0x63, 0x63, 0xF3, 0x74, 0x74, 
	0xF5, 0x32, 0x32, 0xDC, 0x84, 0x84, 0xE7, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x41, 0x41, 0xDA, 0x66, 0x66, 
	0xF0, 0x54, 0x54, 0xF0, 0x24, 0x24, 0xEA, 0x25, 0x25, 0xEB, 
	0x27, 0x27, 0xEE, 0x26, 0x26, 0xEC, 0x35, 0x35, 0xEC, 0x71, 
	0x71, 0xF5, 0x2C, 0x2C, 0xDB, 0xCB, 0xCB, 0xF5, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xBA, 0xBA, 0xF1, 0x3F, 0x3F, 0xE2, 0x64, 0x64, 0xF1, 0x1E, 
	0x1E, 0xE6, 0x21, 0x21, 0xE8, 0x24, 0x24, 0xEB, 0x26, 0x26, 
	0xED, 0x25, 0x25, 0xEC, 0x23, 0x23, 0xEA, 0x37, 0x37, 0xEB, 
	0x71, 0x71, 0xF4, 0x34, 0x34, 0xD7, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7D, 0x7D, 
	0xE4, 0x62, 0x62, 0xEF, 0x39, 0x39, 0xE9, 0x1D, 0x1D, 0xE5, 
	0x20, 0x20, 0xE7, 0x22, 0x22, 0xE9, 0x23, 0x23, 0xEA, 0x23, 
	0x23, 0xEA, 0x21, 0x21, 0xE8, 0x1F, 0x1F, 0xE6, 0x69, 0x69, 
	0xF3, 0x22, 0x22, 0xD8, 0xF9, 0xF9, 0xFE, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x45, 0x45, 0xDA, 0x76, 
	0x76, 0xF5, 0x25, 0x25, 0xE4, 0x1C, 0x1C, 0xE3, 0x1E, 0x1E, 
	0xE5, 0x21, 0x21, 0xE7, 0x2E, 0x2E, 0xE9, 0x3B, 0x3B, 0xEA, 
	0x42, 0x42, 0xEA, 0x3B, 0x3B, 0xE8, 0x68, 0x68, 0xF1, 0x3F, 
	0x3F, 0xE1, 0xD1, 0xD1, 0xF6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0x67, 0x67, 0xE1, 0x79, 0x79, 0xF2, 
	0x57, 0x57, 0xEA, 0x3F, 0x3F, 0xE7, 0x45, 0x45, 0xE8, 0x57, 
	0x57, 0xEB, 0x58, 0x58, 0xEC, 0x56, 0x56, 0xEC, 0x53, 0x53, 
	0xEB, 0x4F, 0x4F, 0xE9, 0x83, 0x83, 0xF4, 0x2D, 0x2D, 0xDA, 
	0xED, 0xED, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xA2, 0xA2, 0xEC, 0x60, 0x60, 0xEA, 0x86, 0x86, 
	0xF2, 0x62, 0x62, 0xEA, 0x63, 0x63, 0xEB, 0x64, 0x64, 0xEB, 
	0x62, 0x62, 0xEB, 0x5F, 0x5F, 0xEB, 0x5C, 0x5C, 0xEA, 0x5F, 
	0x5F, 0xEA, 0x93, 0x93, 0xF8, 0x22, 0x22, 0xD6, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xF1, 0xF1, 0xFC, 0x21, 0x21, 0xD3, 0x9A, 0x9A, 0xF7, 0x7C, 
	0x7C, 0xEE, 0x6E, 0x6E, 0xEB, 0x6D, 0x6D, 0xEB, 0x6C, 0x6C, 
	0xEB, 0x6A, 0x6A, 0xEB, 0x67, 0x67, 0xEB, 0x91, 0x91, 0xF4, 
	0x57, 0x57, 0xE7, 0x94, 0x94, 0xEA, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xBE, 0xBE, 0xF2, 0x34, 0x34, 0xDC, 0xA1, 0xA1, 0xF8, 
	0x9A, 0x9A, 0xF4, 0x88, 0x88, 0xF0, 0x81, 0x81, 0xEE, 0x8A, 
	0x8A, 0xF1, 0xA2, 0xA2, 0xF7, 0x71, 0x71, 0xEE, 0x3B, 0x3B, 
	0xD8, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xC1, 0xC1, 0xF3, 0x24, 0x24, 0xD4, 0x66, 0x66, 
	0xE9, 0x8C, 0x8C, 0xF3, 0x98, 0x98, 0xF5, 0x79, 0x79, 0xEE, 
	0x3E, 0x3E, 0xDE, 0x67, 0x67, 0xE1, 0xF5, 0xF5, 0xFD, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xF6, 0xF6, 0xFD, 0xB1, 0xB1, 0xEF, 0x7D, 
	0x7D, 0xE6, 0x61, 0x61, 0xDF, 0x98, 0x98, 0xEA, 0xD5, 0xD5, 
	0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
	0xFF, 0xFF, 
};

wxBitmap& media-record_bmp_to_wx_bitmap()
{
	static wxMemoryInputStream memIStream( media-record_bmp, sizeof( media-record_bmp ) );
	static wxImage image( memIStream, wxBITMAP_TYPE_BMP );
	static wxBitmap bmp( image );
	return bmp;
};


#endif //MEDIA-RECORD_BMP_H
